version: '2.1'

services:

    pg82:
      # jdbc:postgresql://localhost:54312/guest?user=guest&amp;password=guest
      container_name: pg82
      ports:
        - "54312:5432"
      image: datagrip/postgres:8.2
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg84:
      # jdbc:postgresql://localhost:54314/guest?user=guest&amp;password=guest
      container_name: pg84
      ports:
        - "54314:5432"
      image: postgres:8.4
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg90:
      # jdbc:postgresql://localhost:54320/guest?user=guest&amp;password=guest
      container_name: pg90
      ports:
        - "54320:5432"
      image: postgres:9.0
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg91:
      # jdbc:postgresql://localhost:54321/guest?user=guest&amp;password=guest
      container_name: pg91
      ports:
        - "54321:5432"
      image: postgres:9.1
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg92:
      # jdbc:postgresql://localhost:54322/guest?user=guest&amp;password=guest
      container_name: pg92
      ports:
        - "54322:5432"
      image: postgres:9.2-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg93:
      # jdbc:postgresql://localhost:54323/guest?user=guest&amp;password=guest
      container_name: pg93
      ports:
        - "54323:5432"
      image: postgres:9.3-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg94:
      # jdbc:postgresql://localhost:54324/guest?user=guest&amp;password=guest
      container_name: pg94
      ports:
        - "54324:5432"
      image: postgres:9.4-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg95:
      # jdbc:postgresql://localhost:54325/guest?user=guest&amp;password=guest
      container_name: pg95
      ports:
        - "54325:5432"        
      image: postgres:9.5-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg96:
      # jdbc:postgresql://localhost:54326/guest?user=guest&amp;password=guest
      container_name: pg96
      ports:
        - "54326:5432"
      image: postgres:9.6-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg100:
      # jdbc:postgresql://localhost:54330/guest?user=guest&amp;password=guest
      container_name: pg100
      ports:
        - "54330:5432"
      image: postgres:10.3-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg10X:
      # jdbc:postgresql://localhost:54331/guest?user=guest&amp;password=guest
      container_name: pg10X
      ports:
        - "54331:5432"
      image: postgres:10-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg11X:
      # jdbc:postgresql://localhost:54332/guest?user=guest&amp;password=guest
      container_name: pg11X
      ports:
      - "54332:5432"
      image: postgres:11-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg12X:
      # jdbc:postgresql://localhost:54333/guest?user=guest&amp;password=guest
      container_name: pg12X
      ports:
      - "54333:5432"
      image: postgres:12-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    greenplum:
      # jdbc:postgresql://localhost:54302/gpadmin?user=gpadmin&password=pivotal
      container_name: greenplum
      ports:
        - "54302:5432"
      image: datagrip/greenplum
      healthcheck:
        test: grep -r -i --include \*.log "Database successfully started" || exit 1
        interval: 20s
        timeout: 10s
        retries: 5

    greenplum_5.8:
      # jdbc:postgresql://localhost:54358/testdb?user=tester&password=pivotal
      container_name: greenplum_5.8
      ports:
        - "54358:5432"
      image: datagrip/greenplum:5.8
      privileged: true
      security_opt:
       - seccomp:unconfined
      healthcheck:
        test: grep -r -i --include \*.log "Database successfully started" || exit 1

    greenplum_5.17:
      # jdbc:postgresql://localhost:54303/testdb?user=tester&password=pivotal
      container_name: greenplum_5.17
      ports:
        - "54303:5432"
      image: datagrip/greenplum:5.17
      privileged: true
      security_opt:
       - seccomp:unconfined
      healthcheck:
        test: grep -r -i --include \*.log "Database successfully started" || exit 1

    mysql51:
      # jdbc:mysql://localhost:33051/guest?user=guest&password=guest
      container_name: mysql51
      ports:
        - "33051:3306"
      image: datagrip/mysql:5.1
      env_file: .env
      healthcheck:
        test: "exit 0"

    mysql55:
      # jdbc:mysql://localhost:33055/guest?user=guest&password=guest
      container_name: mysql55
      privileged: true
      ports:
        - "33055:3306"
      image: mysql:5.5
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    mysql56:
      # jdbc:mysql://localhost:33056/guest?user=guest&password=guest
      container_name: mysql56
      ports:
        - "33056:3306"
      image: mysql:5.6
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    mysql57:
      # jdbc:mysql://localhost:33057/guest?user=guest&password=guest
      container_name: mysql57
      ports:
        - "33057:3306"
      image: mysql:5.7
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    mysql803:
      # jdbc:mysql://localhost:33080/guest?user=guest&password=guest
      container_name: mysql803
      image: mysql:8.0.3
      ports:
        - "33080:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci, --log-bin-trust-function-creators=true, --default_authentication_plugin=mysql_native_password]
      healthcheck:
        test: "exit 0"

    mysql80X:
      # jdbc:mysql://localhost:33081/guest?user=guest&password=guest
      container_name: mysql80X
      image: mysql:8
      ports:
        - "33081:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci, --log-bin-trust-function-creators=true, --default_authentication_plugin=mysql_native_password]
      healthcheck:
        test: "exit 0"

    memsql:
      # jdbc:mysql://localhost:33088/guest?user=guest&password=guest
      container_name: memsql
      image: datagrip/memsql:6.7
      ports:
        - "33088:3306"
      environment:
        - IGNORE_MIN_REQUIREMENTS=1
      healthcheck:
        test: "exit 0"

    # for possible compatibility
    maria10:
      # jdbc:mariadb://localhost:33040/guest?user=guest&password=guest
      container_name: maria10
      ports:
        - "33040:3306"
      image: mariadb:10.0
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria55:
      # jdbc:mariadb://localhost:33045/guest?user=guest&password=guest
      container_name: maria55
      image: mariadb:5.5
      ports:
        - "33045:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria52:
      # jdbc:mariadb://localhost:33042/guest?user=guest&password=guest
      container_name: maria52
      image: datagrip/mariadb:5.2
      ports:
        - "33042:3306"
      env_file: .env
      command: [mysqld, --datadir=/var/lib/mysql, --user=mysql, --sql-mode=ONLY_FULL_GROUP_BY, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria53:
      # jdbc:mariadb://localhost:33043/guest?user=guest&password=guest
      container_name: maria53
      image: datagrip/mariadb:5.3
      ports:
        - "33043:3306"
      env_file: .env
      command: [mysqld, --datadir=/var/lib/mysql, --user=mysql, --sql-mode=ONLY_FULL_GROUP_BY, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria100:
      # jdbc:mariadb://localhost:33100/guest?user=guest&password=guest
      container_name: maria100
      image: mariadb:10.0
      ports:
        - "33100:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria101:
      # jdbc:mariadb://localhost:33101/guest?user=guest&password=guest
      container_name: maria101
      image: mariadb:10.1
      ports:
        - "33101:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria102:
      # jdbc:mariadb://localhost:33102/guest?user=guest&password=guest
      container_name: maria102
      image: mariadb:10.2
      ports:
        - "33102:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria103:
      # jdbc:mariadb://localhost:33103/guest?user=guest&password=guest
      container_name: maria103
      image: mariadb:10.3
      ports:
        - "33103:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria104:
      # jdbc:mariadb://localhost:33104/guest?user=guest&password=guest
      container_name: maria104
      image: mariadb:10.4
      ports:
        - "33104:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria1027:
      # jdbc:mariadb://localhost:33127/guest?user=guest&password=guest
      container_name: maria1027
      image: mariadb:10.2.7
      ports:
        - "33127:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria1024:
      # jdbc:mariadb://localhost:33124/guest?user=guest&password=guest
      container_name: maria1024
      image: datagrip/mariadb:10.2.4
      ports:
        - "33124:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria1025:
      # jdbc:mariadb://localhost:33125/guest?user=guest&password=guest
      container_name: maria1025
      image: mariadb:10.2.5
      ports:
        - "33125:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria1038:
      # jdbc:mariadb://localhost:33138/guest?user=guest&password=guest
      container_name: maria1038
      image: mariadb:10.3.8
      ports:
        - "33138:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    # oracle VM options
    # -Duser.country=en -Duser.language=en
    oracle11:
      # jdbc:oracle:thin:guest/guest@localhost:1521:XE
      container_name: oracle11
      ports:
        - "1521:1521"
      image: datagrip/oracle:11.2
      env_file: .env
      healthcheck:
        test: "exit 0"
    
    # oracle 11.2.0.2 express edition (official)
    oracle112:
      # jdbc:oracle:thin:guest/guest@localhost:15112:XE
      container_name: oracle112
      ports:
        - "15112:1521"
      image: datagrip/oracle:11.2.0.2-xe
      shm_size: 1g
      env_file: .env
    
    # oracle 12.1.0.2 standart edition 2 (official)
    # WARN: 12GB; start takes about 5 min
    oracle121:
      # jdbc:oracle:thin:c##tester/testpwd@//localhost:15121/xe
      container_name: oracle121
      ports:
        - "15121:1521"
      image: datagrip/oracle:12.1.0.2-se2
      env_file: .env
      healthcheck:
        test: grep "Database creation complete" /opt/oracle/cfgtoollogs/dbca/XE/XE.log || exit 1
        interval: 10m
        timeout: 30s
        retries: 10

    db2:
      # jdbc:db2://localhost:50000/guest:user=guest;password=guest;
      container_name: db2
      privileged: true
      image: datagrip/db2
      ports:
        - "50000:50000"
      env_file: .env
      healthcheck:
        test: "exit 0"

    db2_11.1:
      # jdbc:db2://localhost:50001/guest:user=guest;password=guest;
      container_name: db2_11.1
      privileged: true
      image: datagrip/db2:11.1
      ports:
        - "50001:50000"
      env_file: .db2_env
      healthcheck:
        test: find /database/config/.shared-data/ -name setup_complete || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    hsqldb200:
      container_name: hsqldb200
      image: datagrip/hsqldb:2.0.0
      ports:
        - "9001:9001"
      env_file: .env
      healthcheck:
        test: "exit 0"

    hsqldb233:
        container_name: hsqldb233
        image: datagrip/hsqldb:2.3.3
        ports:
        - "9002:9001"
        env_file: .env
        healthcheck:
          test: "exit 0"

    derby1011:
      container_name: derby1011
      image: datagrip/derby-server:10.11
      ports:
        - "1527:1527"
      env_file: .env
      healthcheck:
        test: "exit 0"

    derby1012:
      container_name: derby1012
      image: datagrip/derby-server:10.12
      ports:
        - "1528:1527"
      env_file: .env
      healthcheck:
        test: "exit 0"

    h2:
      container_name: h2
      image: datagrip/h2:1.3
      ports:
        - "9092:9092"
      env_file: .env
      healthcheck:
        test: "exit 0"

    # needs about 30 seconds for proper start and initialization
    sybase157:
      # jdbc:jtds:sybase://localhost:5000/guest;user=guest;password=guest1234
      container_name: sybase157      
      image: datagrip/sybase:15.7
      ports:
        - "5000:5000"
      env_file: .env
      hostname: dksybase
      healthcheck:
        test: "exit 0"

    sybase160:
      # jdbc:jtds:sybase://localhost:5001/guest;user=guest;password=guest1234
      container_name: sybase160
      privileged: true
      image: datagrip/sybase:16.0
      ports:
        - "5001:5000"
      env_file: .env
      hostname: mysybase
      healthcheck:
        test: "exit 0"

    mssqllinux:
      # jdbc:sqlserver://localhost:1433;databaseName=testdb;user=tester;password=My@Super@Secret
      container_name: mssqllinux
      privileged: true
      image: datagrip/mssql-server-linux:2017
      ports:
        - "1433:1433"
      env_file: .env
      healthcheck:
        test: grep "Starting up database '${MSSQL_DB}'." /var/opt/mssql/log/errorlog || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    mssqllinux19:
      # jdbc:sqlserver://localhost:1434;databaseName=testdb;user=tester;password=My@Super@Secret
      container_name: mssqllinux19
      privileged: true
      image: datagrip/mssql-server-linux:2019
      ports:
        - "1434:1433"
      env_file: .env
      healthcheck:
        test: grep "Starting up database '${MSSQL_DB}'." /var/opt/mssql/log/errorlog || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    # IBM Informix Innovator-C
    informix:
      container_name: informix
      privileged: true
      image: ibmcom/informix-innovator-c:12.10.FC11IE
      ports:
        - "9088:9088"
        - "27017:27017"
        - "27018:27018"
      env_file: .env
      healthcheck:
        test: "exit 0"

    vertica71:
      # jdbc:vertica://localhost:5471/testdb?user=tester&password=testpwd
      # schema: testschema      
      container_name: vertica71
      image: datagrip/vertica:7.1.2
      ports:
        - "5471:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools-dbadmin.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    vertica72:
      # jdbc:vertica://localhost:5433/testdb?user=tester&password=testpwd
      # schema: testschema      
      container_name: vertica72
      image: datagrip/vertica:7.2.3
      ports:
        - "5433:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    vertica80:
      # jdbc:vertica://localhost:5480/testdb?user=tester&password=testpwd
      # schema: testschema      
      container_name: vertica80
      image: datagrip/vertica:8.0.0
      ports:
        - "5480:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 2m
        timeout: 10s
        retries: 5

    vertica81:
      # jdbc:vertica://localhost:5481/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica81
      image: datagrip/vertica:8.1.1
      ports:
        - "5481:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 2m
        timeout: 10s
        retries: 5

    vertica91:
      # jdbc:vertica://localhost:5491/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica91
      image: datagrip/vertica:9.1.1
      ports:
        - "5491:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 2m
        timeout: 10s
        retries: 5

    exasol:
      # jdbc:exa:localhost:8899;schema=test;user=sys;password=exasol
      container_name: exasol
      privileged: true
      image: datagrip/exasol:latest
      ports:
        - "8899:8888"
      env_file: .env
      healthcheck:
        test: grep -r 'CREATE SCHEMA' /exa/logs/db/DB1/ || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    iris:
      container_name: iris
      image: datagrip/iris:2019
      ports:
        - "9092:52773"
        - "9091:51773"
      env_file: .env
      command: -p /durable/iris.txt
      healthcheck:
        test: grep -r "Private webserver started on 52773" /usr/irissys/mgr/messages.log
        interval: 2m
        timeout: 10s
        retries: 5

    mongo32:
      container_name: mongo32
      image: tutum/mongodb:3.2
      ports:
        - "27117:27017"
        - "28017:28017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    mongo34:
      container_name: mongo34
      image: datagrip/mongodb:3.4
      ports:
        - "27118:27017"
        - "28018:28017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    mongo40:
      container_name: mongo40
      image: datagrip/mongodb:4.0
      ports:
        - "27119:27017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    mongo41:
      container_name: mongo41
      image: datagrip/mongodb:4.1
      ports:
        - "27017:27017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    clickhouse:
      # jdbc:clickhouse://localhost:8123/default
      container_name: clickhouse
      image: datagrip/clickhouse:18
      ports:
      - "8123:8123"
      healthcheck:
        test: grep -r 'Ready for connections' /var/log/clickhouse-server/clickhouse-server.log || exit 1
        interval: 3m
        timeout: 5s
        retries: 3
      ulimits:
        nofile:
          soft: 262144
          hard: 262144
    
    firebird3:
      # jdbc:firebirdsql://localhost:3050/guest?encoding=UTF8
      container_name: firebird3
      image: jacobalberty/firebird:3.0
      ports:
        - "3050:3050"
      environment:
        ISC_PASSWORD: firebird25ss
        FIREBIRD_DATABASE: guest
        FIREBIRD_USER: guest
        FIREBIRD_PASSWORD: guest
      healthcheck:
        test: "exit 0"

    firebird25sc:
      # jdbc:firebirdsql://localhost:3052//firebird/data/guest?encoding=UTF8
      container_name: firebird25sc
      image: jacobalberty/firebird:2.5-sc
      ports:
        - "3052:3050"
      environment:
        FIREBIRD_DATABASE: guest
        FIREBIRD_USER: guest
        FIREBIRD_PASSWORD: guest
      healthcheck:
        test: "exit 0"

    cassandra30:
      # db schema driver: jdbc:cassandra://localhost:9045/system
      container_name: cassandra30
      image: datagrip/cassandra:3.0
      ports:
        - "9045:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 3    

    cassandra3:
      # db schema driver: jdbc:cassandra://localhost:9042/system
      container_name: cassandra3
      image: datagrip/cassandra:3
      ports:
        - "9042:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 3

    cassandra21:
      # db schema driver: jdbc:cassandra://localhost:9043/system
      container_name: cassandra21
      image: datagrip/cassandra:2.1
      ports:
        - "9043:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 1

    cassandra22:
      # db schema driver: jdbc:cassandra://localhost:9044/system
      container_name: cassandra22
      image: datagrip/cassandra:2.2
      ports:
        - "9044:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 3

    saphana:
      # user: SYSTEM
      # pwd: HXEHana1
      # jdbc:sap://localhost:39017/
      container_name: saphana
      image: store/saplabs/hanaexpress:2.00.033.00.20180925.2
      ports:
        - "39017:39017"
      ulimits:
        nofile:
          soft: 1048576
          hard: 1048576
      sysctls:
        - kernel.shmmax=1073741824
        - kernel.shmmni=524288 
        - kernel.shmall=8388608
      command: --agree-to-sap-license --passwords-url http://download.labs.intellij.net/idea/jdbc-drivers/file.json
      healthcheck:
        test: grep -ris --include \*.log "SAP HANA instance executed"
        interval: 4m
        timeout: 5s
        retries: 3

#docker run -e DB_USER=test -e DB_PASSWORD=test -e DB_NAME=test -e REP_USER=rtest -e REP_PASSWORD=test -e ROLE=master --name pg-master -p 5432 -d hmarr/postgresql
#docker run -e DB_USER=test -e DB_PASSWORD=test -e DB_NAME=test -e REP_USER=rtest -e REP_PASSWORD=test -e ROLE=slave -e MASTER_HOST=$MASTER_HOST -e MASTER_PORT=5432 --name pg-slave -p 5432 -d hmarr/postgresql

    pg_master:
      container_name: pg-master
      image: hmarr/postgresql
      ports: 
        - "32768:5432"
      environment:
        - DB_USER=test
        - DB_PASSWORD=test
        - DB_NAME=test
        - REP_USER=rtest
        - REP_PASSWORD=test
        - ROLE=master
      healthcheck:
        test: "sleep 10 || true"
        interval: 1m
        timeout: 5s
        retries: 3

    pg_slave:
      container_name: pg-slave
      image: hmarr/postgresql
      ports:
        - "32769:5432"
      depends_on:
        - pg_master
      external_links:
        - pg_master
      environment:
        - DB_USER=test
        - DB_PASSWORD=test
        - DB_NAME=test
        - REP_USER=rtest
        - REP_PASSWORD=test
        - ROLE=slave
        - MASTER_PORT=5432
        - MASTER_HOST=pg_master
      healthcheck:
        test: "sleep 5 || true"
        interval: 1m
        timeout: 5s
        retries: 3