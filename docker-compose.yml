version: '2.1'

services:

    pg_8.2:
      # jdbc:postgresql://localhost:54312/guest?user=guest&amp;password=guest
      container_name: pg_8.2
      ports:
        - "54312:5432"
      image: datagrip/postgres:8.2
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_8.4:
      # jdbc:postgresql://localhost:54314/guest?user=guest&amp;password=guest
      container_name: pg_8.4
      ports:
        - "54314:5432"
      image: postgres:8.4
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.0:
      # jdbc:postgresql://localhost:54320/guest?user=guest&amp;password=guest
      container_name: pg_9.0
      ports:
        - "54320:5432"
      image: postgres:9.0
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.1:
      # jdbc:postgresql://localhost:54321/guest?user=guest&amp;password=guest
      container_name: pg_9.1
      ports:
        - "54321:5432"
      image: postgres:9.1
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.2:
      # jdbc:postgresql://localhost:54322/guest?user=guest&amp;password=guest
      container_name: pg_9.2
      ports:
        - "54322:5432"
      image: postgres:9.2-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.3:
      # jdbc:postgresql://localhost:54323/guest?user=guest&amp;password=guest
      container_name: pg_9.3
      ports:
        - "54323:5432"
      image: postgres:9.3-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.4:
      # jdbc:postgresql://localhost:54324/guest?user=guest&amp;password=guest
      container_name: pg_9.4
      ports:
        - "54324:5432"
      image: postgres:9.4-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.5:
      # jdbc:postgresql://localhost:54325/guest?user=guest&amp;password=guest
      container_name: pg_9.5
      ports:
        - "54325:5432"
      image: postgres:9.5-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_9.6:
      # jdbc:postgresql://localhost:54326/guest?user=guest&amp;password=guest
      container_name: pg_9.6
      ports:
        - "54326:5432"
      image: postgres:9.6-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_10.3:
      # jdbc:postgresql://localhost:54330/guest?user=guest&amp;password=guest
      container_name: pg_10.3
      ports:
        - "54330:5432"
      image: postgres:10.3-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_10.X:
      # jdbc:postgresql://localhost:54331/guest?user=guest&amp;password=guest
      container_name: pg_10.X
      ports:
        - "54331:5432"
      image: postgres:10-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_11.X:
      # jdbc:postgresql://localhost:54332/guest?user=guest&amp;password=guest
      container_name: pg_11.X
      ports:
      - "54332:5432"
      image: postgres:11-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    pg_12.X:
      # jdbc:postgresql://localhost:54333/guest?user=guest&amp;password=guest
      container_name: pg_12.X
      ports:
      - "54333:5432"
      image: postgres:12-alpine
      env_file: .env
      healthcheck:
        test: "exit 0"

    greenplum_5.8:
      # jdbc:postgresql://localhost:54358/testdb?user=tester&password=pivotal
      container_name: greenplum_5.8
      ports:
        - "54358:5432"
      image: datagrip/greenplum:5.8
      privileged: true
      security_opt:
       - seccomp:unconfined
      healthcheck:
        test: grep -r -i --include \*.log "Database successfully started" || exit 1

    greenplum_5.17:
      # jdbc:postgresql://localhost:54303/testdb?user=tester&password=pivotal
      container_name: greenplum_5.17
      ports:
        - "54303:5432"
      image: datagrip/greenplum:5.17
      privileged: true
      security_opt:
       - seccomp:unconfined
      healthcheck:
        test: grep -r -i --include \*.log "Database successfully started" || exit 1

    greenplum_6.1:
      # jdbc:postgresql://localhost:54304/testdb?user=tester&password=pivotal
      container_name: greenplum_6.1
      ports:
        - "54304:5432"
      image: datagrip/greenplum:6.1
      privileged: true
      hostname: greenplum_6.1.0
      security_opt:
       - seccomp:unconfined
      healthcheck:
        test: grep -r -i --include \*.log "Database successfully started" || exit 1

    mysql_5.1:
      # jdbc:mysql://localhost:33051/guest?user=guest&password=guest
      container_name: mysql_5.1
      ports:
        - "33051:3306"
      image: datagrip/mysql:5.1
      env_file: .env
      healthcheck:
        test: "exit 0"

    mysql_5.5:
      # jdbc:mysql://localhost:33055/guest?user=guest&password=guest
      container_name: mysql_5.5
      privileged: true
      ports:
        - "33055:3306"
      image: mysql:5.5
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    mysql_5.6:
      # jdbc:mysql://localhost:33056/guest?user=guest&password=guest
      container_name: mysql_5.6
      ports:
        - "33056:3306"
      image: mysql:5.6
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    mysql_5.7:
      # jdbc:mysql://localhost:33057/guest?user=guest&password=guest
      container_name: mysql_5.7
      ports:
        - "33057:3306"
      image: mysql:5.7
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    mysql_8.0.3:
      # jdbc:mysql://localhost:33080/guest?user=guest&password=guest
      container_name: mysql_8.0.3
      image: mysql:8.0.3
      ports:
        - "33080:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci, --log-bin-trust-function-creators=true, --default_authentication_plugin=mysql_native_password]
      healthcheck:
        test: "exit 0"

    mysql_8.0.X:
      # jdbc:mysql://localhost:33081/guest?user=guest&password=guest
      container_name: mysql_8.0.X
      image: mysql:8.0
      ports:
        - "33081:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci, --log-bin-trust-function-creators=true, --default_authentication_plugin=mysql_native_password]
      healthcheck:
        test: "exit 0"

    maria_5.5:
      # jdbc:mariadb://localhost:33045/guest?user=guest&password=guest
      container_name: maria_5.5
      image: mariadb:5.5
      ports:
        - "33045:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_5.2:
      # jdbc:mariadb://localhost:33042/guest?user=guest&password=guest
      container_name: maria_5.2
      image: datagrip/mariadb:5.2
      ports:
        - "33042:3306"
      env_file: .env
      command: [mysqld, --datadir=/var/lib/mysql, --user=mysql, --sql-mode=ONLY_FULL_GROUP_BY, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_5.3:
      # jdbc:mariadb://localhost:33043/guest?user=guest&password=guest
      container_name: maria_5.3
      image: datagrip/mariadb:5.3
      ports:
        - "33043:3306"
      env_file: .env
      command: [mysqld, --datadir=/var/lib/mysql, --user=mysql, --sql-mode=ONLY_FULL_GROUP_BY, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_10.0:
      # jdbc:mariadb://localhost:33100/guest?user=guest&password=guest
      container_name: maria_10.0
      image: mariadb:10.0
      ports:
        - "33100:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_10.1:
      # jdbc:mariadb://localhost:33101/guest?user=guest&password=guest
      container_name: maria_10.1
      image: mariadb:10.1
      ports:
        - "33101:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_10.2:
      # jdbc:mariadb://localhost:33102/guest?user=guest&password=guest
      container_name: maria_10.2
      image: mariadb:10.2
      ports:
        - "33102:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_10.3:
      # jdbc:mariadb://localhost:33103/guest?user=guest&password=guest
      container_name: maria_10.3
      image: mariadb:10.3
      ports:
        - "33103:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    maria_10.4:
      # jdbc:mariadb://localhost:33104/guest?user=guest&password=guest
      container_name: maria_10.4
      image: mariadb:10.4
      ports:
        - "33104:3306"
      env_file: .env
      command: [mysqld, --character-set-server=utf8, --collation-server=utf8_unicode_ci]
      healthcheck:
        test: "exit 0"

    # oracle VM options
    # -Duser.country=en -Duser.language=en
    oracle_11.2:
      # jdbc:oracle:thin:guest/guest@localhost:1521:XE
      container_name: oracle_11.2
      ports:
        - "1521:1521"
      image: datagrip/oracle:11.2
      shm_size: 1g
      env_file: .env
      healthcheck:
        test: "exit 0"

    # oracle 12.1.0.2 standart edition 2 (official)
    oracle_12.1:
      container_name: oracle_12.1
      ports:
        - "15122:1521"
      image: datagrip/oracle:12.1.0.2-se2-directio
      env_file: .env
      healthcheck:
        test: grep "Database creation complete" /opt/oracle/cfgtoollogs/dbca/XE/XE.log || exit 1
        interval: 10m
        timeout: 30s
        retries: 10

    oracle_12.2:
      container_name: oracle_12.2
      ports:
        - "15123:1521"
      image: datagrip/oracle:12.2.0.1-se2-directio
      env_file: .env
      healthcheck:
        test: grep "Database creation complete" /opt/oracle/cfgtoollogs/dbca/XE/XE.log || exit 1
        interval: 10m
        timeout: 30s
        retries: 10

    db2_10.5:
      # jdbc:db2://localhost:50000/guest:user=guest;password=guest;
      container_name: db2_10.5
      privileged: true
      image: datagrip/db2
      ports:
        - "50000:50000"
      environment:
        - DB2INST1_PASSWORD=root_pass
        - LICENSE=accept
      healthcheck:
        test: "exit 0"

    db2_11.1:
      # jdbc:db2://localhost:50001/guest:user=guest;password=guest;
      container_name: db2_11.1
      privileged: true
      image: datagrip/db2:11.1
      ports:
        - "50001:50000"
      env_file: ./db2.env
      healthcheck:
        test: find /database/config/.shared-data/ -name setup_complete || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    # needs about 30 seconds for proper start and initialization
    sybase_15.7:
      # jdbc:jtds:sybase://localhost:5000/guest;user=guest;password=guest1234
      container_name: sybase_15.7
      image: datagrip/sybase:15.7
      ports:
        - "5000:5000"
      env_file: .env
      hostname: dksybase
      healthcheck:
        test: "exit 0"

    sybase_16.0:
      # jdbc:jtds:sybase://localhost:5001/guest;user=guest;password=guest1234
      container_name: sybase_16.0
      privileged: true
      image: datagrip/sybase:16.0
      ports:
        - "5001:5000"
      env_file: .env
      hostname: mysybase
      healthcheck:
        test: "exit 0"

    mssql_2017:
      # jdbc:sqlserver://localhost:1433;databaseName=testdb;user=tester;password=My@Super@Secret
      container_name: mssql_2017
      privileged: true
      # image: datagrip/mssql-server-linux:2017
      image: datagrip/mssql-server-linux:2017
      ports:
        - "1433:1433"
      env_file: .env
      healthcheck:
        test: grep "Starting up database '${MSSQL_DB}'." /var/opt/mssql/log/errorlog || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    mssql_2019:
      # jdbc:sqlserver://localhost:1434;databaseName=testdb;user=tester;password=My@Super@Secret
      container_name: mssql_2019
      privileged: true
      image: datagrip/mssql-server-linux:2019
      ports:
        - "1434:1433"
      env_file: .env
      healthcheck:
        test: grep "Starting up database '${MSSQL_DB}'." /var/opt/mssql/log/errorlog || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    vertica_7.1:
      # jdbc:vertica://localhost:5471/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica_7.1
      image: datagrip/vertica:7.1.2
      ports:
        - "5471:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools-dbadmin.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    vertica_7.2:
      # jdbc:vertica://localhost:5433/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica_7.2
      image: datagrip/vertica:7.2.3
      ports:
        - "5433:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    vertica_8.0:
      # jdbc:vertica://localhost:5480/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica_8.0
      image: datagrip/vertica:8.0.0
      ports:
        - "5480:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 2m
        timeout: 10s
        retries: 5

    vertica_8.1:
      # jdbc:vertica://localhost:5481/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica_8.1
      image: datagrip/vertica:8.1.1
      ports:
        - "5481:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 2m
        timeout: 10s
        retries: 5

    vertica_9.1:
      # jdbc:vertica://localhost:5491/testdb?user=tester&password=testpwd
      # schema: testschema
      container_name: vertica_9.1
      image: datagrip/vertica:9.1.1
      ports:
        - "5491:5433"
      env_file: .env
      healthcheck:
        test: tail /opt/vertica/log/adminTools.log | grep "Create DB complete, signaling OK" || exit 1
        interval: 2m
        timeout: 10s
        retries: 5

    exasol_6.0:
      # jdbc:exa:localhost:8899;schema=test;user=sys;password=exasol
      container_name: exasol_6.0
      privileged: true
      image: datagrip/exasol:latest
      ports:
        - "8899:8888"
      env_file: .env
      healthcheck:
        test: grep -r 'CREATE SCHEMA' /exa/logs/db/DB1/ || exit 1
        interval: 3m
        timeout: 10s
        retries: 5

    mongo_3.2:
      container_name: mongo_3.2
      image: datagrip/mongodb:3.2
      ports:
        - "27117:27017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    mongo_3.4:
      container_name: mongo_3.4
      image: datagrip/mongodb:3.4
      ports:
        - "27118:27017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    mongo_4.0:
      container_name: mongo_4.0
      image: datagrip/mongodb:4.0
      ports:
        - "27119:27017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    mongo_4.1:
      container_name: mongo_4.1
      image: datagrip/mongodb:4.1
      ports:
        - "27017:27017"
      env_file: .env
      healthcheck:
        test: "exit 0"

    clickhouse_18:
      # jdbc:clickhouse://localhost:8123/default
      container_name: clickhouse_18
      image: datagrip/clickhouse:18
      ports:
      - "8123:8123"
      healthcheck:
        test: grep -r 'Ready for connections' /var/log/clickhouse-server/clickhouse-server.log || exit 1
        interval: 3m
        timeout: 5s
        retries: 3
      ulimits:
        nofile:
          soft: 262144
          hard: 262144

    clickhouse_19:
      # jdbc:clickhouse://localhost:8124/default
      container_name: clickhouse_19
      image: datagrip/clickhouse:19
      ports:
      - "8124:8123"
      healthcheck:
        test: grep -r 'Ready for connections' /var/log/clickhouse-server/clickhouse-server.log || exit 1
        interval: 3m
        timeout: 5s
        retries: 3
      ulimits:
        nofile:
          soft: 262144
          hard: 262144

    cassandra_3.0:
      # db schema driver: jdbc:cassandra://localhost:9045/system
      container_name: cassandra_3.0
      image: datagrip/cassandra:3.0
      ports:
        - "9045:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 3

    cassandra_3.11:
      # db schema driver: jdbc:cassandra://localhost:9042/system
      container_name: cassandra_3.11
      image: datagrip/cassandra:3
      ports:
        - "9042:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 3

    cassandra_2.1:
      # db schema driver: jdbc:cassandra://localhost:9043/system
      container_name: cassandra_2.1
      image: datagrip/cassandra:2.1
      ports:
        - "9043:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 1

    cassandra_2.2:
      # db schema driver: jdbc:cassandra://localhost:9044/system
      container_name: cassandra_2.2
      image: datagrip/cassandra:2.2
      ports:
        - "9044:9042"
      healthcheck:
        test: grep -r '\{name=guest' /var/log/cassandra/system.log || exit 1
        interval: 2m
        timeout: 5s
        retries: 3
